{"ast":null,"code":"var _jsxFileName = \"/home/hamish/code/beenzino48/dotfiles/01-starting-setup/src/components/Chart/ChartBar.js\";\nimport React from \"react\";\nimport \"./ChartBar.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChartBar = props => {\n  // return an array of the numbers from the data points\n  const dataPointValues = props.dataPoint.map()(dataPoint => dataPoint.value); // returns the max number from the array of dataPointValues\n\n  const totalMaximum = Math.max(...dataPointValues);\n  let barFillHeight = \"0%\";\n\n  if (props.max > 0) {\n    // returns percentage this bar should be filled out of 100\n    barFillHeight = Math.round(props.value / props.maxValue * 100) + \"%\";\n  }\n\n  {\n    /* map every data point to a chart bar */\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-bar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-bar__inner\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-bar__fill\",\n        style: {\n          height: barFillHeight\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-bar__label\",\n      children: props.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ChartBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChartBar\");","map":{"version":3,"names":["React","ChartBar","props","dataPointValues","dataPoint","map","value","totalMaximum","Math","max","barFillHeight","round","maxValue","height","label"],"sources":["/home/hamish/code/beenzino48/dotfiles/01-starting-setup/src/components/Chart/ChartBar.js"],"sourcesContent":["import React from \"react\";\n\nimport \"./ChartBar.css\";\n\nconst ChartBar = (props) => {\n  // return an array of the numbers from the data points\n  const dataPointValues = props.dataPoint.map()((dataPoint) => dataPoint.value);\n  // returns the max number from the array of dataPointValues\n  const totalMaximum = Math.max(...dataPointValues);\n  let barFillHeight = \"0%\";\n\n  if (props.max > 0) {\n    // returns percentage this bar should be filled out of 100\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\n  }\n  {\n    /* map every data point to a chart bar */\n  }\n  return (\n    <div className=\"chart-bar\">\n      <div className=\"chart-bar__inner\">\n        <div\n          className=\"chart-bar__fill\"\n          style={{ height: barFillHeight }}\n        ></div>\n      </div>\n      <div className=\"chart-bar__label\">{props.label}</div>\n    </div>\n  );\n};\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,gBAAP;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;EAC1B;EACA,MAAMC,eAAe,GAAGD,KAAK,CAACE,SAAN,CAAgBC,GAAhB,GAAuBD,SAAD,IAAeA,SAAS,CAACE,KAA/C,CAAxB,CAF0B,CAG1B;;EACA,MAAMC,YAAY,GAAGC,IAAI,CAACC,GAAL,CAAS,GAAGN,eAAZ,CAArB;EACA,IAAIO,aAAa,GAAG,IAApB;;EAEA,IAAIR,KAAK,CAACO,GAAN,GAAY,CAAhB,EAAmB;IACjB;IACAC,aAAa,GAAGF,IAAI,CAACG,KAAL,CAAYT,KAAK,CAACI,KAAN,GAAcJ,KAAK,CAACU,QAArB,GAAiC,GAA5C,IAAmD,GAAnE;EACD;;EACD;IACE;EACD;EACD,oBACE;IAAK,SAAS,EAAC,WAAf;IAAA,wBACE;MAAK,SAAS,EAAC,kBAAf;MAAA,uBACE;QACE,SAAS,EAAC,iBADZ;QAEE,KAAK,EAAE;UAAEC,MAAM,EAAEH;QAAV;MAFT;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,eAOE;MAAK,SAAS,EAAC,kBAAf;MAAA,UAAmCR,KAAK,CAACY;IAAzC;MAAA;MAAA;MAAA;IAAA,QAPF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAWD,CAzBD;;KAAMb,Q"},"metadata":{},"sourceType":"module"}